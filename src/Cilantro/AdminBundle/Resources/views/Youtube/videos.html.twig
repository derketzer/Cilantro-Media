{% extends(':CilantroAdmin:base.html.twig') %}

{% block body %}
    <div class="row">
        <div class="col-xs-12">
            <div class="clearfix">
                <div class="pull-right tableTools-container"></div>
            </div>
            <div class="table-header">
                Videos
            </div>

            <div>
                <table id="dynamic-table" class="table table-striped table-bordered table-hover">
                    <thead>
                        <tr>
                            <th>Thumbnail</th>
                            <th>Titulo</th>
                            <th>Descripci√≥n</th>
							<th>Tags</th>
                            <th>Views</th>
							<th>Likes</th>
							<th>Dislikes</th>
							<th>Favoritos</th>
							<th>Comentarios</th>
							<th>Activo</th>
                        </tr>
                    </thead>

                    <tbody>
                        {% if videos is defined %}
                            {% for key,video in videos %}
                                <tr>
                                    <td class="center">
                                        <img src="{{ video.thumbnail }}" style="max-width:150px;" />
                                    </td>
                                    <td>
                                        {{ video.title }}
                                    </td>
                                    <td>
                                        {{ video.description }}
                                    </td>
									<td>
										{% for tag in video.tags %}
											{{ tag.name }},
										{% endfor %}
									</td>
                                    <td>
                                        {% if video.stats is defined and video.stats is not null %}
                                            {{ video.stats.viewCount }}
                                        {% else %}
                                            N/A
                                        {% endif %}
                                    </td>
									<td>
										{% if video.stats is defined and video.stats is not null %}
											{{ video.stats.likeCount }}
										{% else %}
											N/A
										{% endif %}
									</td>
									<td>
										{% if video.stats is defined and video.stats is not null %}
											{{ video.stats.dislikeCount }}
										{% else %}
											N/A
										{% endif %}
									</td>
									<td>
										{% if video.stats is defined and video.stats is not null %}
											{{ video.stats.favoriteCount }}
										{% else %}
											N/A
										{% endif %}
									</td>
									<td>
										{% if video.stats is defined and video.stats is not null %}
											{{ video.stats.commentCount }}
										{% else %}
											N/A
										{% endif %}
									</td>
									<td>
										<div class="col-xs-3">
											<label>
												<input name="switch-active-{{ key }}" video-id="{{ video.id }}" class="ace ace-switch ace-switch-4 btn-empty" type="checkbox"{% if video.active %} checked{% endif %} />
												<span class="lbl"></span>
											</label>
										</div>
									</td>
                                </tr>
                            {% endfor %}
                        {% endif %}
                    </tbody>
                </table>
            </div>
        </div>
    </div>
{% endblock %}

{% block scripts %}
        <script src="{{ asset('bundles/cilantroadmin/components/datatables/media/js/jquery.dataTables.js') }}"></script>
        <script src="{{ asset('bundles/cilantroadmin/components/_mod/datatables/jquery.dataTables.bootstrap.js') }}"></script>
        <script src="{{ asset('bundles/cilantroadmin/components/datatables.net-buttons/js/dataTables.buttons.js') }}"></script>
		<script src="{{ asset('bundles/cilantroadmin/components/datatables.net-buttons/js/buttons.flash.js') }}"></script>
		<script src="{{ asset('bundles/cilantroadmin/components/datatables.net-buttons/js/buttons.html5.js') }}"></script>
		<script src="{{ asset('bundles/cilantroadmin/components/datatables.net-buttons/js/buttons.print.js') }}"></script>
		<script src="{{ asset('bundles/cilantroadmin/components/datatables.net-buttons/js/buttons.colVis.js') }}"></script>
		<script src="{{ asset('bundles/cilantroadmin/components/datatables.net-select/js/dataTables.select.js') }}"></script>

		<script type="text/javascript">
			jQuery(function($) {
				//initiate dataTables plugin
				var myTable =
				$('#dynamic-table')
				.DataTable( {
					bAutoWidth: false,
					"aoColumns": [
                        { "bSortable": false },
                        null,
                        { "bSortable": false },
						{ "bSortable": false },
                        null,
						null,
						null,
						null,
						null,
							null
					],
					"aaSorting": [],


					//"bProcessing": true,
			        //"bServerSide": true,
			        //"sAjaxSource": "http://127.0.0.1/table.php"	,

					//,
					//"sScrollY": "200px",
					//"bPaginate": false,

					//"sScrollX": "100%",
					//"sScrollXInner": "120%",
					//"bScrollCollapse": true,
					//Note: if you are applying horizontal scrolling (sScrollX) on a ".table-bordered"
					//you may want to wrap the table inside a "div.dataTables_borderWrap" element

					//"iDisplayLength": 50
			    } );

				$.fn.dataTable.Buttons.defaults.dom.container.className = 'dt-buttons btn-overlap btn-group btn-overlap';

				new $.fn.dataTable.Buttons( myTable, {
					buttons: [
					  {
						"extend": "colvis",
						"text": "<i class='fa fa-search bigger-110 blue'></i> <span class='hidden'>Show/hide columns</span>",
						"className": "btn btn-white btn-primary btn-bold",
						columns: ':not(:first):not(:last)'
					  },
					  {
						"extend": "copy",
						"text": "<i class='fa fa-copy bigger-110 pink'></i> <span class='hidden'>Copy to clipboard</span>",
						"className": "btn btn-white btn-primary btn-bold"
					  },
					  {
						"extend": "csv",
						"text": "<i class='fa fa-database bigger-110 orange'></i> <span class='hidden'>Export to CSV</span>",
						"className": "btn btn-white btn-primary btn-bold"
					  },
					  {
						"extend": "excel",
						"text": "<i class='fa fa-file-excel-o bigger-110 green'></i> <span class='hidden'>Export to Excel</span>",
						"className": "btn btn-white btn-primary btn-bold"
					  },
					  {
						"extend": "pdf",
						"text": "<i class='fa fa-file-pdf-o bigger-110 red'></i> <span class='hidden'>Export to PDF</span>",
						"className": "btn btn-white btn-primary btn-bold"
					  },
					  {
						"extend": "print",
						"text": "<i class='fa fa-print bigger-110 grey'></i> <span class='hidden'>Print</span>",
						"className": "btn btn-white btn-primary btn-bold",
						autoPrint: false,
						message: 'This print was produced using the Print button for DataTables'
					  }
					]
				} );
				myTable.buttons().container().appendTo( $('.tableTools-container') );

				//style the message box
				var defaultCopyAction = myTable.button(1).action();
				myTable.button(1).action(function (e, dt, button, config) {
					defaultCopyAction(e, dt, button, config);
					$('.dt-button-info').addClass('gritter-item-wrapper gritter-info gritter-center white');
				});

				var defaultColvisAction = myTable.button(0).action();
				myTable.button(0).action(function (e, dt, button, config) {

					defaultColvisAction(e, dt, button, config);


					if($('.dt-button-collection > .dropdown-menu').length == 0) {
						$('.dt-button-collection')
						.wrapInner('<ul class="dropdown-menu dropdown-light dropdown-caret dropdown-caret" />')
						.find('a').attr('href', '#').wrap("<li />")
					}
					$('.dt-button-collection').appendTo('.tableTools-container .dt-buttons')
				});

				////

				setTimeout(function() {
					$($('.tableTools-container')).find('a.dt-button').each(function() {
						var div = $(this).find(' > div').first();
						if(div.length == 1) div.tooltip({container: 'body', title: div.parent().text()});
						else $(this).tooltip({container: 'body', title: $(this).text()});
					});
				}, 500);

				myTable.on( 'select', function ( e, dt, type, index ) {
					if ( type === 'row' ) {
						$( myTable.row( index ).node() ).find('input:checkbox').prop('checked', true);
					}
				} );
				myTable.on( 'deselect', function ( e, dt, type, index ) {
					if ( type === 'row' ) {
						$( myTable.row( index ).node() ).find('input:checkbox').prop('checked', false);
					}
				} );

				$(document).on('click', '#dynamic-table .dropdown-toggle', function(e) {
					e.stopImmediatePropagation();
					e.stopPropagation();
					e.preventDefault();
				});

				//And for the first simple table, which doesn't have TableTools or dataTables
				//select/deselect all rows according to table header checkbox
				var active_class = 'active';
				$('#simple-table > thead > tr > th input[type=checkbox]').eq(0).on('click', function(){
					var th_checked = this.checked;//checkbox inside "TH" table header

					$(this).closest('table').find('tbody > tr').each(function(){
						var row = this;
						if(th_checked) $(row).addClass(active_class).find('input[type=checkbox]').eq(0).prop('checked', true);
						else $(row).removeClass(active_class).find('input[type=checkbox]').eq(0).prop('checked', false);
					});
				});

				//select/deselect a row when the checkbox is checked/unchecked
				$('#simple-table').on('click', 'td input[type=checkbox]' , function(){
					var $row = $(this).closest('tr');
					if($row.is('.detail-row ')) return;
					if(this.checked) $row.addClass(active_class);
					else $row.removeClass(active_class);
				});

				/********************************/
				//add tooltip for small view action buttons in dropdown menu
				$('[data-rel="tooltip"]').tooltip({placement: tooltip_placement});

				//tooltip placement on right or left
				function tooltip_placement(context, source) {
					var $source = $(source);
					var $parent = $source.closest('table')
					var off1 = $parent.offset();
					var w1 = $parent.width();

					var off2 = $source.offset();
					//var w2 = $source.width();

					if( parseInt(off2.left) < parseInt(off1.left) + parseInt(w1 / 2) ) return 'right';
					return 'left';
				}

				/***************/
				$('.show-details-btn').on('click', function(e) {
					e.preventDefault();
					$(this).closest('tr').next().toggleClass('open');
					$(this).find(ace.vars['.icon']).toggleClass('fa-angle-double-down').toggleClass('fa-angle-double-up');
				});
				/***************/
			});

			$('.ace-switch').change(function(){
				var videoId = $(this).attr('video-id');
				var checkedValue = $(this).is(':checked')?1:0;

				post_data = {'checkedValue':checkedValue, 'videoId':videoId};
				$.post(
						'{{ path('cilantro_admin_youtube_videoswitchactive') }}',
						post_data,
						function(response){
							if(response.type == 'error') {
								alert(response.text);
							}
						},
						'json'
				);
			});
		</script>
{% endblock %}